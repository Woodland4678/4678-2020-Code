// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#pragma once

#include "frc/commands/Subsystem.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "frc/DigitalInput.h"
#include "frc/Solenoid.h"
#include "rev/CANSparkMax.h"

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

/**
 *
 *
 * @author ExampleAuthor
 */
class Intakes: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
std::shared_ptr<rev::CANSparkMax> middleRoller;
std::shared_ptr<rev::CANSparkMax> magazine;
std::shared_ptr<frc::DigitalInput> magazineSensor1;
std::shared_ptr<frc::DigitalInput> magazineSensor2;
std::shared_ptr<frc::Solenoid> intakeSolenoid;
std::shared_ptr<rev::CANSparkMax> leftRoller;
std::shared_ptr<rev::CANSparkMax> rightRoller;
std::shared_ptr<frc::DigitalInput> leftSensor;
std::shared_ptr<frc::DigitalInput> rightSensor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
Intakes();
	void InitDefaultCommand() override;
	void Periodic() override;
	void spinIntakesConstant();
	void setIntakeSpeed(double rightPower, double leftPower, double middlePower);
	void stopIntakes();
	void spitoutIntakes();
	void stopLeft();
	void stopRight();
	void setLeft(double speed);
	void setRight(double speed);
	void setMiddle(double speed);
	void deployIntakes();
	void retractIntakes();

	void spinMag();
	void stopMag();
	void spitoutMag();
	bool index();
	bool prevDetect = false;
	int idxState = 0;
	int idxcnt = 0;
	bool idxrtn = false;

	double intakeSpeed = 0.5;
	double magSpeed = 0.5;
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS


};

