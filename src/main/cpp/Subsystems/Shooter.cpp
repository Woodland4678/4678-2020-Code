// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Subsystems/Shooter.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    //Shooter PID values
    const double shooter_P = 0.5;
    const double shooter_I = 0;
    const double shooter_D = 0;

Shooter::Shooter() : frc::Subsystem("Shooter") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
shooterMotor1.reset(new WPI_TalonSRX(14));


shooterMotor2.reset(new WPI_TalonSRX(6));


shooterMotor3.reset(new WPI_TalonSRX(7));


shooterMotor4.reset(new WPI_TalonSRX(8));


hoodPosition.reset(new frc::Solenoid(0, 1));
AddChild("hoodPosition", hoodPosition);

hoodMidPosition.reset(new frc::Solenoid(0, 2));
AddChild("hoodMidPosition", hoodMidPosition);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    // Slavery of the motors
    shooterMotor2->Follow(*shooterMotor1);
    shooterMotor3->Follow(*shooterMotor1);
    shooterMotor4->Follow(*shooterMotor1);
    // setting PID values of master
    shooterMotor1->Config_kP(0,shooter_P);
    shooterMotor1->Config_kI(0,shooter_I);
    shooterMotor1->Config_kD(0,shooter_D);




}

void Shooter::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Shooter::Periodic() {
    // Put code here to be run every loop

}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


// Put methods for controlling this subsystem
// here. Call these from Commands.

void Shooter::SetShooterSpeed(double speed) {
    shooterMotor1->Set(ControlMode::Velocity,speed);
}
